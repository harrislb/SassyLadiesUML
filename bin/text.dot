digraph sassy_uml{node [shape = "record"] SassyClass[label = "{SassyClass|- className : Ljava/lang/String;\l- classMethods : Ljava/util/ArrayList<Lproblem/asm/SassyMethod;>;\l- classImplements : Ljava/util/ArrayList<Ljava/lang/String;>;\l- classExtends : Ljava/lang/String;\l- fields : Ljava/util/ArrayList<Lproblem/asm/SassyField;>;\l- isInterface : Z\l- usesClasses : Ljava/util/ArrayList<Ljava/lang/String;>;\l- associationClasses : Ljava/util/ArrayList<Ljava/lang/String;>;\l| + getFields() : SassyField\l+ addField(SassyField) : void\l+ setIsInterface(boolean) : void\l+ getIsInterface() : boolean\l+ getClassName() : String\l+ setClassName(String) : void\l+ getClassMethods() : SassyMethod\l+ addClassMethods(SassyMethod) : void\l+ getClassImplements() : String\l+ addClassImplements(String) : void\l+ getClassExtends() : String\l+ setClassExtends(String) : void\l+ addUsesClasses(String) : void\l+ getUsesClasses() : String\l+ addAssociationClasses(String) : void\l+ getAssociationClasses() : String\l}"]ClassFieldVisitor[label = "{ClassFieldVisitor| myClass : Lproblem/asm/SassyClass;\l| + visitField(int, String, String, String, Object) : FieldVisitor\l}"]ClassMethodVisitor[label = "{ClassMethodVisitor|- myClass : Lproblem/asm/SassyClass;\l| + visitMethod(int, String, String, String, String[]) : MethodVisitor\l addAccessLevel(int, SassyMethod) : void\l addReturnType(String, SassyMethod) : void\l addArguments(String, SassyMethod) : void\l}"]SassyMethod[label = "{SassyMethod|- methodName : Ljava/lang/String;\l- methodReturnType : Ljava/lang/String;\l- methodAccess : Ljava/lang/String;\l- signature : Ljava/lang/String;\l- argTypes : Ljava/util/ArrayList<Ljava/lang/String;>;\l- localVars : Ljava/util/ArrayList<Ljava/lang/String;>;\l| + setSignature(String) : void\l+ getSignature() : String\l+ getMethodName() : String\l+ setMethodName(String) : void\l+ getMethodReturnType() : String\l+ setMethodReturnType(String) : void\l+ getMethodAccess() : String\l+ setMethodAccess(String) : void\l+ getArgTypes() : String\l+ addArgTypes(String) : void\l+ addLocalVars(String) : void\l}"]FirstASM[label = "{FirstASM|+ myField : Ljava/lang/String;\l| + main(String[]) : void\l}"]SassyField[label = "{SassyField|- fieldName : Ljava/lang/String;\l- fieldAccess : Ljava/lang/String;\l- fieldType : Ljava/lang/String;\l| + getFieldName() : String\l+ setFieldName(String) : void\l+ getFieldAccess() : String\l+ getFieldType() : String\l+ setFieldType(String) : void\l+ setFieldAccess(int) : void\l}"]ClassDeclarationVisitor[label = "{ClassDeclarationVisitor|- myClass : Lproblem/asm/SassyClass;\l| + visit(int, int, String, String, String, String[]) : void\l}"]DesignParser[label = "{DesignParser|+ classes : [Ljava/lang/String;\l| + main(String[]) : void\l}"]UMLDrawer[label = "{UMLDrawer|- classMap : Ljava/util/HashMap<Ljava/lang/String;Lproblem/asm/SassyClass;>;\l| + toGraphViz() : void\l+ addMethods(SassyClass, StringBuilder) : void\l+ addFields(SassyClass, StringBuilder) : void\l+ addClass(SassyClass) : void\l+ addExtensionArrows(StringBuilder) : void\l+ addInterfaceArrows(StringBuilder) : void\l}"]edge [arrowhead = "empty"]edge [style = "dashed"]}
