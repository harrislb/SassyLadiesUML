digraph sassy_uml{node [shape = "record"] SassyClass[label = "{SassyClass|- className : java.lang.String\l- classMethods : java.util.ArrayList\l- classImplements : java.util.ArrayList\l- classExtends : java.lang.String\l- fields : java.util.ArrayList\l- isInterface : boolean\l| + getFields() : ArrayList\l+ addField(SassyField) : void\l+ setIsInterface(boolean) : void\l+ getIsInterface() : boolean\l+ getClassName() : String\l+ setClassName(String) : void\l+ getClassMethods() : ArrayList\l+ addClassMethods(SassyMethod) : void\l+ getClassImplements() : ArrayList\l+ addClassImplements(String) : void\l+ getClassExtends() : String\l+ setClassExtends(String) : void\l}"]ClassFieldVisitor[label = "{ClassFieldVisitor| myClass : problem.asm.SassyClass\l| + visitField(int, String, String, String, Object) : FieldVisitor\l}"]ClassMethodVisitor[label = "{ClassMethodVisitor|- myClass : problem.asm.SassyClass\l| + visitMethod(int, String, String, String, String[]) : MethodVisitor\l addAccessLevel(int, SassyMethod) : void\l addReturnType(String, SassyMethod) : void\l addArguments(String, SassyMethod) : void\l}"]SassyMethod[label = "{SassyMethod|- methodName : java.lang.String\l- methodReturnType : java.lang.String\l- methodAccess : java.lang.String\l- argTypes : java.util.ArrayList\l| + getMethodName() : String\l+ setMethodName(String) : void\l+ getMethodReturnType() : String\l+ setMethodReturnType(String) : void\l+ getMethodAccess() : String\l+ setMethodAccess(String) : void\l+ getArgTypes() : ArrayList\l+ addArgTypes(String) : void\l}"]FirstASM[label = "{FirstASM|+ myField : java.lang.String\l| + main(String[]) : void\l}"]SassyField[label = "{SassyField|- fieldName : java.lang.String\l- fieldAccess : java.lang.String\l- fieldType : java.lang.String\l| + getFieldName() : String\l+ setFieldName(String) : void\l+ getFieldAccess() : String\l+ getFieldType() : String\l+ setFieldType(String) : void\l+ setFieldAccess(int) : void\l}"]ClassDeclarationVisitor[label = "{ClassDeclarationVisitor|- myClass : problem.asm.SassyClass\l| + visit(int, int, String, String, String, String[]) : void\l}"]DesignParser[label = "{DesignParser|+ classes : java.lang.String[]\l| + main(String[]) : void\l}"]UMLDrawer[label = "{UMLDrawer|- classMap : java.util.HashMap\l| + toGraphViz() : void\l+ addMethods(SassyClass, StringBuilder) : void\l+ addFields(SassyClass, StringBuilder) : void\l+ addClass(SassyClass) : void\l+ addExtensionArrows(StringBuilder) : void\l+ addInterfaceArrows(StringBuilder) : void\l}"]edge [arrowhead = "empty"]edge [style = "dashed"]}
